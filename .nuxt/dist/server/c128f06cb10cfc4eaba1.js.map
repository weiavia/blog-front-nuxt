{"version":3,"file":"c128f06cb10cfc4eaba1.js","sources":["webpack:///./mixin/index.js"],"sourcesContent":["import { formatTime, timeParagraph } from '@/helper'\r\nimport { classMenu } from '@/config'\r\nimport { SERVER_HOST } from '@/env'\r\nimport { authForm } from '@/api/request'\r\n\r\nexport const articleFilter = {\r\n  filters: {\r\n    time(date) {\r\n      let time = formatTime(date)\r\n      return `${time.year}年${time.month}月${time.day}日 ${time.hour}:${time.minute}:${time.second}`\r\n    },\r\n    className(type) {\r\n      let klass = classMenu.find((klass) => {\r\n        if(klass.type == type) {\r\n          return klass\r\n        }\r\n      })\r\n      return klass ? klass.name : 'null'\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const staticSourceFilter = {\r\n  filters: {\r\n    sourcePrefix(src) {\r\n      return `${SERVER_HOST}/static/${src}`\r\n    },\r\n    time(date) {\r\n      let time = formatTime(date)\r\n      return `${time.month}月${time.day}日 ${time.hour}:${time.minute}:${time.second}`\r\n    },\r\n    timeParagraphFilter(date) {\r\n      let time = formatTime(date)\r\n      return timeParagraph(time.hour)\r\n    }\r\n  },\r\n  methods: {\r\n    sourcePrefix(src) {\r\n      return `${SERVER_HOST}/static/${src}`\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  methods: {\r\n    async eventPreCheckAuth(event) {\r\n      // await checkToken()\r\n      // try {\r\n      //   await checkToken()\r\n      // } catch(e) {\r\n      //   console.log('catch')\r\n      //   event.preventDefault()\r\n      // }\r\n      // console.log(event)\r\n      // 事件线程不会等待异步结束 所以这种方法不可行\r\n\r\n      // token存在否， token过期否 ？\r\n      const token = localStorage.getItem('token')\r\n      if(!token) {\r\n        event.preventDefault()\r\n        authForm()\r\n      }\r\n    }\r\n  },\r\n}"],"mappings":"AAAA","sourceRoot":""}